/*
 * SpaceFrame.java
 *
 * Created on 12-apr-2010, 20:33:44
 */
package GUI;

import Bots.TomBot;
import Framework.*;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.Timer;

public class SpaceFrame extends javax.swing.JFrame implements ActionListener {

    private SpacePanel spacePanel;
    private ArrayList<Integer> keysPressed;
    private Timer keyTimer;
    private int timerInterval = 20;
    private int botCount = 0;
    private Game game;
    private int playerShipId;

    /** Creates new form SpaceFrame */
    public SpaceFrame() {
        initComponents();

        spacePanel = new SpacePanel();
        this.add(spacePanel);
        spacePanel.addMouseListener(new java.awt.event.MouseAdapter() {

            @Override
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });

        spacePanel.addKeyListener(new java.awt.event.KeyAdapter() {

            @Override
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }

            @Override
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });

        startSinglePlayer();
    }

    public void startSinglePlayer() {

        game = new Game();
        spacePanel.init(game.getSpace());
        spacePanel.requestFocus();
        spacePanel.setCursor(new Cursor(Cursor.CROSSHAIR_CURSOR));
        keyTimer = new Timer(timerInterval, this);
        keyTimer.start();
        keysPressed = new ArrayList<Integer>();
        Dimension d = spacePanel.getPreferredSize();
        d.height += 45;
        d.width += 130;
        this.setSize(d);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        butNewGame = new javax.swing.JButton();
        butAddBot = new javax.swing.JButton();
        butAddPlayer = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });

        butNewGame.setText("New game");
        butNewGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butNewGameActionPerformed(evt);
            }
        });

        butAddBot.setText("Add tBot");
        butAddBot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butAddBotActionPerformed(evt);
            }
        });

        butAddPlayer.setText("Add player");
        butAddPlayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butAddPlayerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(648, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(butNewGame, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(butAddBot, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(butAddPlayer, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(butNewGame)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(butAddPlayer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(butAddBot)
                .addContainerGap(245, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formMousePressed(java.awt.event.MouseEvent evt) {
        SpaceShip ship = game.getPlayerShip();
        double x = evt.getX() - ship.getX(), y = evt.getY() - ship.getY();
        double lengthV = Math.sqrt(x * x + y * y);
        game.fire(x / lengthV, y / lengthV, playerShipId);
    }

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_W
                || evt.getKeyCode() == KeyEvent.VK_A
                || evt.getKeyCode() == KeyEvent.VK_S
                || evt.getKeyCode() == KeyEvent.VK_D) {
            if (!keysPressed.contains(new Integer(evt.getKeyCode()))) {
                keysPressed.add(evt.getKeyCode());
            }
        }
    }//GEN-LAST:event_formKeyPressed

    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased
        keysPressed.remove(new Integer(evt.getKeyCode()));
    }//GEN-LAST:event_formKeyReleased

    private void butNewGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butNewGameActionPerformed
        startSinglePlayer();
        spacePanel.requestFocus();
    }//GEN-LAST:event_butNewGameActionPerformed

    private void butAddPlayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butAddPlayerActionPerformed
        playerShipId = game.addPlayer(true, new SpaceShip(Color.BLACK, "Bamisoep"));
        spacePanel.requestFocus();
    }//GEN-LAST:event_butAddPlayerActionPerformed

    private void addFloBotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFloBotActionPerformed
    }//GEN-LAST:event_addFloBotActionPerformed

    private void butAddBotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butAddBotActionPerformed
        SpaceShip ship = new SpaceShip(Color.red, "TomBot " + botCount);
        ship.setBot(new TomBot());
        game.addPlayer(false, ship);
        botCount++;
        spacePanel.requestFocus();
    }//GEN-LAST:event_butAddBotActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new SpaceFrame().setVisible(true);
            }
        });
    }

    public void actionPerformed(ActionEvent e) {
        for (int i = 0; i < keysPressed.size(); i++) {
            int key = keysPressed.get(i);
            int amount = keysPressed.size();
            if (key == KeyEvent.VK_A) {
                game.increaseSpeed(-1.0 / amount, 0, playerShipId);
            } else if (key == KeyEvent.VK_D) {
                game.increaseSpeed(1.0 / amount, 0, playerShipId);
            } else if (key == KeyEvent.VK_W) {
                game.increaseSpeed(0, -1.0 / amount, playerShipId);
            } else if (key == KeyEvent.VK_S) {
                game.increaseSpeed(0, 1.0 / amount, playerShipId);
            }
        }
        spacePanel.repaint();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butAddBot;
    private javax.swing.JButton butAddPlayer;
    private javax.swing.JButton butNewGame;
    // End of variables declaration//GEN-END:variables
}
